# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# ---- ARQUIVOS E DIRETÓRIOS DO PRÓPRIO PYTHON ----
_pycache_/
*.py[cod]
*.so
*.pyo
*.pyd
*.py,cover

# ---- AMBIENTES VIRTUAIS ----
venv/
.env/
env/
*.venv
*.env

# ---- CONFIGURAÇÕES DE IDEs/EDITORES ----
.vscode/
.idea/
*.iml

# ---- LOGS, CACHE E ARQUIVOS TEMPORÁRIOS ----
*.log
*.tmp
*.swp
*.swo
*.bak
*.DS_Store
*.rej
*.orig
Thumbs.db

# ---- DEPENDÊNCIAS E GERENCIADORES DE PACOTES ----
pip-log.txt
pip-delete-this-directory.txt
poetry.lock
Pipfile
Pipfile.lock
requirements.txt

# ---- JUPYTER NOTEBOOK ----
.ipynb_checkpoints/

# ---- TESTES E COBERTURA DE CÓDIGO ----
.tox/
.nox/
.coverage
.coverage.*
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# ---- BUILD E DISTRIBUIÇÃO ----
build/
dist/
*.egg-info/
.eggs/
MANIFEST

# ---- DOCKER ----
*.pid

# ---- ARQUIVOS DE BANCO DE DADOS ----
*.sqlite3
*.db
*.sqlite

# ---- CONFIGURAÇÕES E SEGURANÇA ----
config.yaml
config.json
secrets.json
.envrc
*.pem
*.crt
*.key
*.pfx
*.cert

# ---- DJANGO ESPECÍFICO ----
**/settings.py
*/settings/.py
migrations/
staticfiles/
media/

# =====================================
# CONFIGURAÇÃO PARA FRONTEND
# =====================================

# ---- NODE.JS & NPM/YARN/Pnpm ----
node_modules/
package-lock.json
yarn.lock
pnpm-lock.yaml

# ---- REACT & NEXT.JS ----
.next/
out/

# ---- TYPESCRIPT ----
*.tsbuildinfo

# ---- CSS/Tailwind ----
*.css.map
*.scssc
*.sassc
*.lessc
.postcss-cache/

# ---- BUNDLERS E BUILD ----
public/
dist/
.cache/
.nyc_output/
coverage/
webpack-stats.json
.vite/

# ---- TESTES E FERRAMENTAS DE FRONTEND ----
jest/
cypress/screenshots/
cypress/videos/

# ---- ARQUIVOS GERADOS EM HTML ----
*.min.js
*.min.css
*.map
*.gzip
*.br